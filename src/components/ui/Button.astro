---
interface Props {
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  href?: string;
  type?: 'button' | 'submit' | 'reset';
}

const { 
  variant = 'primary', 
  size = 'md', 
  class: className = '',
  href,
  type = 'button'
} = Astro.props;

const baseStyles = 'inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50';

const variants = {
  primary: 'bg-primary text-white hover:bg-primary/90',
  secondary: 'bg-secondary text-white hover:bg-secondary/90',
  outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground'
};

const sizes = {
  sm: 'h-9 px-3 text-sm',
  md: 'h-10 px-4 py-2',
  lg: 'h-11 px-8 text-lg'
};

const classes = `${baseStyles} ${variants[variant]} ${sizes[size]} ${className}`;
---

{
  href ? (
    <a href={href} class={classes}>
      <slot />
    </a>
  ) : (
    <button type={type} class={classes}>
      <slot />
    </button>
  )
} 