---
import Button from '../ui/Button.astro';

const navigation = [
  { text: 'Inicio', href: '/' },
  { text: 'Sobre Mí', href: '/#sobre-mi' },
  { text: 'Servicios', href: '/#servicios' },
  { text: 'Tarifas', href: '/#tarifas' },
  { text: 'Contacto', href: '/#contacto' },
];

const currentPath = Astro.url.pathname;
---

<header class="fixed w-full bg-white/90 backdrop-blur-sm shadow-md z-50">
  <nav class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <a href="/" class="text-2xl font-bold text-primary-700 transform-gpu font-heading">
        Ps. Viviana Poveda
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navigation.map((item) => (
          <a
            href={item.href}
            class={`text-sm font-medium transition-colors duration-200 ${
              currentPath === item.href
                ? 'text-pink-700 font-bold underline'
                : 'text-gray-900 hover:text-pink-600 focus:text-pink-600'
            } font-sans`}
          >
            {item.text}
          </a>
        ))}
        
        <a
          href="/#contacto"
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-semibold rounded-md shadow-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500 font-sans"
        >
          Agenda tu consulta
        </a>
      </div>

      <!-- Mobile menu button -->
      <button
        type="button"
        class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
        aria-controls="mobile-menu"
        aria-expanded="false"
        id="mobile-menu-button"
      >
        <span class="sr-only">Abrir menú</span>
        <svg
          class="h-6 w-6"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
      </button>
    </div>
  </nav>

  <!-- Mobile menu -->
  <div class="hidden md:hidden" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {navigation.map((item) => (
        <a
          href={item.href}
          class={`block px-3 py-2 rounded-md text-base font-medium ${
            currentPath === item.href
              ? 'text-pink-700 font-bold underline bg-pink-50 dark:text-pink-400 dark:bg-gray-800'
              : 'text-gray-900 hover:text-pink-600 hover:bg-gray-50 dark:text-gray-300 dark:hover:text-pink-400 dark:hover:bg-gray-800'
          }`}
        >
          {item.text}
        </a>
      ))}
      <div class="px-3 py-2">
        <a
          href="/#contacto"
          class="w-full inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-semibold rounded-md shadow-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500 font-sans"
        >
          Agenda tu consulta
        </a>
      </div>
    </div>
  </div>
</header>

<script is:inline>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const expanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', (!expanded).toString());
      mobileMenu.classList.toggle('hidden');
    });
  }

  document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const targetId = this.getAttribute('href');
      const targetElement = document.querySelector(targetId);

      if (targetElement) {
        if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
          mobileMenu.classList.add('hidden');
        }

        targetElement.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
</script>
